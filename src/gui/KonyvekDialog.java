/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Frame;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import model.IModel;
import model.Konyvek;

/**
 *
 * @author Örs
 */
public class KonyvekDialog extends javax.swing.JDialog implements TableModelListener {
    
    private Frame parent;
    private IModel model;
    private List<Konyvek> konyvek;
    private DefaultTableModel dtm;
    
    public KonyvekDialog(java.awt.Frame parent, boolean modal, IModel model) {
        super(parent, modal);
        initComponents();
        
        this.parent = parent;
        this.model = model;
        this.dtm = dtm;
        
        setLocationRelativeTo(parent);
        setTitle("Könyvek áttekintése");
        
        dtm = (DefaultTableModel) tblKonyvek.getModel();
        dtm.addTableModelListener(this);
        
        try {
            konyvek = model.getAllKonyv();
            updatetable();
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex,
                    "Adatbázis Hiba", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblKonyvek = new javax.swing.JTable();
        btnUJ = new javax.swing.JButton();
        btnSzerkeszt = new javax.swing.JButton();
        btnTorol = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblKonyvek.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "TagID", "Cím", "Szerző Vezetkénnév", "Szerző Keresztnév", "Oldalszám"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblKonyvek);

        btnUJ.setText("Új");
        btnUJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUJActionPerformed(evt);
            }
        });

        btnSzerkeszt.setText("Szerkeszt");
        btnSzerkeszt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSzerkesztActionPerformed(evt);
            }
        });

        btnTorol.setText("Töröl");
        btnTorol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTorolActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 724, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOK)
                    .addComponent(btnUJ, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTorol, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(btnSzerkeszt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnOK, btnSzerkeszt, btnTorol, btnUJ});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUJ)
                        .addGap(18, 18, 18)
                        .addComponent(btnSzerkeszt)
                        .addGap(18, 18, 18)
                        .addComponent(btnTorol)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOK))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnUJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUJActionPerformed
        KonyvekUjSzerkesztJDialog kuszjd = new KonyvekUjSzerkesztJDialog(parent, true, null);
        kuszjd.setVisible(true);
        
        if (kuszjd.isMentes()) {
            try {
                model.addKonyv(kuszjd.getKonyv());
                konyvek.add(kuszjd.getKonyv());
                updatetable();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex,
                        "Adatbázis Hiba", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Válassz ki egy Könyvet a szerkesztéshez",
                    "Adatbázis Hiba", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnUJActionPerformed

    private void btnSzerkesztActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSzerkesztActionPerformed
        int selectedRow = tblKonyvek.getSelectedRow();
        
        if (selectedRow >= 0) {
            KonyvekUjSzerkesztJDialog kuszjd = new KonyvekUjSzerkesztJDialog(parent, true, konyvek.get(selectedRow));
            kuszjd.setVisible(true);
            
            if (kuszjd.isMentes()) {
                try {
                    model.updateKony(kuszjd.getKonyv());
                    updatetable();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex,
                            "Adatbázis Hiba", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Válassz ki egy Könyvet a szerkesztéshez",
                    "Adatbázis Hiba", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSzerkesztActionPerformed

    private void btnTorolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTorolActionPerformed
        int selectedRow = tblKonyvek.getSelectedRow();
        
        if (selectedRow >= 0) {
            int valasz = JOptionPane.showConfirmDialog(parent, "Biztos hogy Törölni akarod a kiválasztott személyt?",
                    "Törlési megerősítés", JOptionPane.YES_NO_OPTION);
            if (valasz == JOptionPane.YES_OPTION) {
                try {
                    /*itt kitörlöm az adatbázisból*/
                    model.removeKonyv(konyvek.get(selectedRow));
                    /*itt meg a listábó*/
                    konyvek.remove(selectedRow);
                    updatetable();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, "Válassz ki egy Könyvet a szerkesztéshez",
                            "Adatbázis Hiba", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Válassz ki egy Könyvet a Törléshez",
                    "Adatbázis Hiba", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTorolActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnSzerkeszt;
    private javax.swing.JButton btnTorol;
    private javax.swing.JButton btnUJ;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblKonyvek;
    // End of variables declaration//GEN-END:variables

    private void updatetable() {
        dtm.getDataVector().removeAllElements();
        
        dtm.fireTableDataChanged();
        
        for (Konyvek k : konyvek) {
            Vector sor = new Vector();
            
            sor.add(k.getId());
            
            if (k.getIdtag() != 0) {
                sor.add(k.getTag().getVnev() + " " + k.getTag().getKnev());
            } else {
                sor.add(k.getIdtag());
            }
            
            sor.add(k.getCim());
            sor.add(k.getSzerzovnev());
            sor.add(k.getSzerzoknev());
            sor.add(k.getOldalszam());
            dtm.addRow(sor);
        }
    }
    
    @Override
    public void tableChanged(TableModelEvent e) {
        int oszlop = e.getColumn();
        int sor = e.getFirstRow();
        
        if (e.getType() == TableModelEvent.UPDATE && sor >= 0 && oszlop >= 0) {
            
            Object ujErtek = dtm.getValueAt(sor, oszlop);
            Konyvek k = konyvek.get(sor);
            
            switch (oszlop) {
                case 1:
                    k.setIdtag((int) ujErtek);
                    break;
                case 2:
                    k.setCim((String) ujErtek);
                    break;
                case 3:
                    k.setSzerzovnev((String) ujErtek);
                    break;
                case 4:
                    k.setSzerzoknev((String) ujErtek);
                    break;
                case 5:
                    k.setOldalszam((int) ujErtek);
                    break;
            }
            
            try {
                model.updateKony(k);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex,
                            "Adatbázis Hiba", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
}
